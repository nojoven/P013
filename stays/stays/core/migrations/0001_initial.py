# Generated by Django 4.2.4 on 2024-02-05 23:33

import core.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
from stays import utils as stays_utils

class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Publication",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=stays_utils.common_helpers.uuid_generator,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "author_username",
                    models.CharField(default=None, max_length=255, null=True),
                ),
                (
                    "author_slug",
                    models.SlugField(default=None, max_length=255, null=True),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title of your publication.", max_length=70, null=True
                    ),
                ),
                (
                    "season_of_stay",
                    models.CharField(
                        help_text="Title of your publication.", max_length=6, null=True
                    ),
                ),
                ("year_of_stay", models.IntegerField(default=1990, null=True)),
                (
                    "summary",
                    models.TextField(
                        help_text="Summarize your story.", max_length=170, null=True
                    ),
                ),
                (
                    "text_story",
                    models.TextField(
                        blank=True,
                        help_text="Write your story.",
                        max_length=25000,
                        null=True,
                    ),
                ),
                (
                    "voice_story",
                    models.FileField(
                        blank=True,
                        default=None,
                        help_text="Record your story.",
                        max_length=1000,
                        upload_to=core.models.voice_story_upload_to,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.CharField(
                        choices=[("voice", "voice"), ("text", "text")],
                        default="text",
                        max_length=5,
                        null=True,
                    ),
                ),
                (
                    "country_code_of_stay",
                    django_countries.fields.CountryField(max_length=2, null=True),
                ),
                (
                    "published_from_country_code",
                    django_countries.fields.CountryField(max_length=2, null=True),
                ),
                (
                    "picture",
                    models.ImageField(
                        default="seals-6627197_1280.jpg",
                        max_length=800,
                        null=True,
                        upload_to=core.models.picture_upload_to,
                    ),
                ),
                (
                    "upvotes_count",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(
                                0, message="Upvotes count cannot be negative."
                            )
                        ],
                    ),
                ),
                ("reveal_city", models.BooleanField(default=False)),
                ("city_name", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="PublicationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[("voice", "voice"), ("text", "text")],
                        default="text",
                        max_length=5,
                        null=True,
                    ),
                ),
                ("is_text", models.BooleanField(default=True)),
                ("is_voice", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="PublicationUpvote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("upvote_profile", models.SlugField(max_length=500, null=True)),
                ("upvote_date", models.DateTimeField(auto_now_add=True)),
                (
                    "upvote_value",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(
                                0, message="Number of attempts cannot be negative."
                            ),
                            django.core.validators.MaxValueValidator(
                                1,
                                message="Number of attempts cannot exceed the maximum allowed.",
                            ),
                        ],
                    ),
                ),
                (
                    "publication",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.publication",
                    ),
                ),
            ],
            options={
                "unique_together": {("publication", "upvote_profile")},
            },
        ),
    ]
